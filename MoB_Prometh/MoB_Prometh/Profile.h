/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   Profile.h
 * Author: Rita Gon√ßalves (1160912)
 */

#ifndef PROFILE_H
#define PROFILE_H

#include <list>

#include "Medicine.h"
#include "MedicineIntake.h"

/**
 * Represents a user profile.
 * 
 * @param code User code automatically generated by the doctor
 * @param medicineList The user's medicine, intake hours and frequency 
 */
class Profile {
private:
    /**
     * User code automatically generated by the doctor.
     */
    long code;

    /**
     * Information about the user's medicine.
     */
    std::list<MedicineIntake> medicineList;

    /**
     * Constant for daily medicine intake.
     */
    const std::string DAILY = "Diariamente";

    /**
     * Constant for medicine intake twice a day.
     */
    const std::string BIDAILY = "2x ao dia";

    /**
     * Constant for medicine intake three times a day.
     */
    const std::string TRIDAILY = "3x ao dia";

    /**
     * Constant for weekly medicine intake.
     */
    const std::string WEEKLY = "Semanalmente";

    /**
     * Searches for a medicine in the map.
     * 
     * @param medicine  Medicine to search for
     * @return the index of the medicine in the table. If not found, returns -1
     */
    bool search_medicine(Medicine medicine);

public:

    /**
     * Creates an instance of Profile.
     * 
     * @param code User code automatically generated by the doctor
     * @param medicineList Information about the user's medicine 
     */
    Profile(long code, std::list<MedicineIntake> medicineList) {
        this->code = code;
        this->medicineList = medicineList;
    }

    /**
     * Deconstructs the Profile.
     */
    ~Profile() {

    }

    /**
     * Returns a list containing all the medicine that the user is taking.
     * 
     * @return the medicine that the user is taking
     */
    std::list<Medicine> list_medicine();

    /**
     * Returns the intake hours for a certain medicine.
     * 
     * @param medicine Medicine to search for
     * @return the intake hours of the medicine
     */
    int* get_medicine_intake_hours(Medicine medicine);

    /**
     * Returns the intake frequency of a certain medicine.
     * 
     * @param medicine Medicine to search for
     * @return the intake frequency of the medicine
     */
    int get_medicine_frequency(Medicine medicine);
};

#endif /* PROFILE_H */